# ThymeleafConfig에 이미 설정해놓음
spring:
  banner:
    location: banner.txt
# 기본적으로 배치 작업은 응용 프로그램을 시작할 때 즉시 실행된다. 자동 실행 기능을 비활성화 해야한다.
  batch:
    initialize-schema: embedded
    job:
      enabled: false
  output:
    ansi:
      enabled: always
# jpa 설정
  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto:  update
    show-sql: true
      
  datasource:
    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
    username: sa
    password: 
  profiles:
    active: local

# actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: "*"
      path-mapping:
        health : healthcheck
    jmx:
      exposure:
        include: "*"
  endpoint:
#    beans:
#      enabled: false
    shutdown:
      enabled: true
    health:
      enabled: true


#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    database: h2
#    generate-ddl: false
#    open-in-view: false
#    show-sql: true
#    hibernate:
#      ddl-auto: validate
#      naming:
#        implicit-strategy: org.hibernate.cfg.EJB3NamingStrategy
#    properties:
#      hibernate.cache.use_second_level_cache: true
#      hibernate.cache.use_query_cache: false
#      hibernate.generate_statistics: true
#      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
        
# ansi를 사용한다고 정의해주면 tomcat으로 실행 시, console에 color가 나옴 

server:
  port: 8085

logging:
  level:
    root: warn
    org.springFramework.web : debug
    com.example.demo : info
    

# 해당하는 부분은 ThymeleafConfig.java에 추가함
#spring:
#  thymeleaf:
#    cache: false
#    template-resolver-order: 1

#  mvc:
#    view:
#      prefix: src/main/webapp/WEB-INF/views/
#      suffix: .html