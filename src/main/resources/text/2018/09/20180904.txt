(JPA-h2)
http://asfirstalways.tistory.com/305?category=682686

HttpSessionUtil.java 추가함 

JPA에서도 데이터베이스의 개념인 릴레이션간의 관계를 설정할 수 있음
SQL문을 사용했을 때와 다른점은 테이블과 테이블의 관계를 객체 상에서 설정해주는 것 뿐!

@ManyToOne이라는 annotation을 통해 설정해주면 된다

추가적으로 제약조건의 이름을 설정해줄 수 있다.
ex :: @JoinColumn(foreignKey = @ForeignKey(name="fk_question_writer"))

반대로도 가능함!
@OneToMany


** 255자가 넘는 긴 텍스트의 String 타입인 경우에는 어노테이션을 추가해줘야함
@Lob


(h2가 오랜만에 들어가니 접속이 되지않아서 검색해보니 stack of flow에서 FILE_LOCK=NO를 붙이면 된다함)
=> 붙이니까 된다!
(참고) https://stackoverflow.com/questions/38192479/how-to-resolve-caused-by-java-lang-illegalstateexception-the-file-is-locked

but, FILE_LOCK=NO 옵션을 붙이니까 error 발생하면서 서버가 돌아가지 않음

--->>>>>>> http://localhost:8085/console 여기로 접속해야 h2 dataBase에 접속할 수 있음
(참고)

===========================
ㄴ mysql에서 show create table 해서 해당 칼럼 datatype 봤던 형식
= h2에서는 SHOW COLUMNS FROM USER; 으로 사용!! ******(기억하기) 

datasource:
    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE;FILE_LOCK=NO
    username: sa
    password: 
  profiles:
    active: local
    
============================

그 외, 리팩토링 관해 글 찾아서 읽는 중

(EntityManagerFactory 관련 참고 글)
https://blog.perfectacle.com/2018/01/14/jpa-entity-manager-factory/
(batch jpa repository)
http://javaninja.net/2017/12/spring-batch-writing-jpa-repository/