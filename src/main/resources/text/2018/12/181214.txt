java comparable, comparator -> 정렬! 정렬할 때 비교가 가능하다, 정렬할 때 기준을 정할 수 있다.

Comparable : 객체 간의 일반적인 정렬이 필요할때, Comparable 인터페이스를 확장해서 
			정렬의 기준을 정의하는 compareTo() 메서드를 구현한다.
Comparator : 객체 간의 특정한 정렬이 필요할 때, Comparator 인터페이스를 확장해서 
			특정 기준을 정의하는 compare() 메서드를 구현한다.
(공통점) 정렬의 기준을 정의
(차이점) 정렬 기준이 일반적이냐, 일반적이지 않냐
		compareTo(Object o) 메서드를 구현하냐, compare(Object o1, Object o2) 메서드를 구현하느냐 차이

comparable은 일반적인 정렬, comparator는 커스터마이즈 정렬에 사용되고 비교가 아니다
참고 : https://jeong-pro.tistory.com/173


=================================================================
Null point Exception 처리를 돕는 Wrapper Class -> Optional

모든 객체는 NPE에 대한 검사가 필요하고 방지하는 코드도 필요하다
예제는 Employee01.java에 적어두었다.
(사용법)
1. Optional.ofNullable(object)로 어떤 Object를 감싸는 Optional 클래스 객체를 생성한다.
2. Optional 객체가 제공하는 메서드들을 이용해서 null 체크 및 작업을 수행한다.

참고 : https://jeong-pro.tistory.com/169?category=773575