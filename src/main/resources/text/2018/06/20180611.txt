> Spring boot 2.0 actuator
(예제)
http://wonwoo.ml/index.php/post/1947
(설명)
http://www.libqa.com/wiki/732

	HTTP를 이용하여 어플리케이션의 관리나 모니터링에 도움 되는 기능들을 제공한다.
	실행중인 어플리케이션 내불르 볼 수 있는 웹 End point를 제공한다.
	HTTP 엔드 포인트, JMX 또는 원격 셸(SSH, TELNET)을 사용하여 응용 프로그램을 관리하고, 모니터
	하도록 선택할 수 있고, 감시, 덤프, 상태 및 메트릭 수집은 어플리케이션 내에서 자동으로
	적용할 수 있다.
	
	
> http://localhost:8085/healthCheck 호출 시, 화면에 {}... 이게 전부

HelloEndpoint.java에 web, jmx 관련 어노테이션을 적어놨다.
	=> jmx 란?
JMX는 java management extension의 약자이다. JDK 1.5부터 기본적으로 탑재되어 제공되고 있다.
Application 관리를 위한 다양한 기능을 제공할 목적으로 시작되었다.
Non-Java resources와 하드웨어에 대해 wrapping한 인터페이스를 제공하며, 
API를 외부로 노출해 application 설정 및 통계데이터를 수집할수도 있다. 
	=> 용어
Manageable Resource : 관리대상의 되는 리소스
MBean : Managed bean의 약자이며, Manageble Resource에 대한 접근 및 조작에 대한 interface를 제공한다.
MBean Server : MBean을 관리하는 Java Class
JMX Agent : Mbean 관리를 위한 서비스를 제공하는 Java Process. 다양한 Protocol Adapter와 Connector를 제공한다.
Management Application : JMX 활용하여 만들어진 Application 관리를 담당하는 Application
Notification : MBean에 의해 발생한 event, alert, information을 Wrapping한 Java Object
Instrumentation : MBean에 의해 관리되는 리소스들


출처: http://opennote46.tistory.com/26 [욱'S 노트]	

> GradleGitTestApplication.java
위치를 /gradle_git_test/src/main/java/com/example/demo/ 로 이동함
이동하면서 @ComponentScan 어노테이션을 써주고 basePackages를 적어줬다.

> 암호화, 복호화 관련 util 추가 
  암호화, 복호화 어노테이션 추가 
